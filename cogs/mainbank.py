from base import EconomyBot

import discord
from discord import app_commands

from datetime import datetime
from discord.ext import commands

from PIL import Image, ImageDraw, ImageFont
import io
from discord.ui import View, Button
from modules.inventory_funcs import shop_items


class ShopButton(Button):
    def __init__(self):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ–¥–∑–∏ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏
        first_emoji = shop_items[0]["name"].split()[0] if shop_items else "üõí"
        super().__init__(
            label="–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω",
            style=discord.ButtonStyle.success,
            emoji=first_emoji,
            custom_id="shop_button"
        )

    async def callback(self, interaction: discord.Interaction):
        embed = discord.Embed(title="–ú–ê–ì–ê–ó–ò–ù", color=discord.Color.gold())
        desc = ""
        for item in shop_items:
            # –ü–∞—Ä—Å–∏–º —ç–º–æ–¥–∑–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
            parts = item["name"].split(" ", 1)
            emoji = parts[0] if len(parts) > 1 else ""
            name = parts[1].upper() if len(parts) > 1 else item["name"].upper()
            desc += f"{emoji} {name} -- {item['cost']} <:gold:1396897616729735299>\n{item['info']}\nID: {item['id']}\n"
        embed.description = desc
        await interaction.response.send_message(embed=embed, ephemeral=True)

class CommandsButton(Button):
    def __init__(self):
        super().__init__(
            label="–ö–æ–º–∞–Ω–¥—ã",
            style=discord.ButtonStyle.primary,
            emoji="üìñ",
            custom_id="commands_button"
        )

    async def callback(self, interaction: discord.Interaction):
        embed = discord.Embed(title="–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", color=discord.Color.blue())
        embed.description = (
            "**–≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ –±–∞–Ω–∫**\n"
            "/–±–∞–ª–∞–Ω—Å [@—É—á–∞—Å—Ç–Ω–∏–∫] ‚Äî –±–∞–ª–∞–Ω—Å (–∫–æ—à–µ–ª—ë–∫/–±–∞–Ω–∫)\n"
            "/—Å–Ω—è—Ç—å <—Å—É–º–º–∞*> ‚Äî —Å–Ω—è—Ç—å —Å –±–∞–Ω–∫–∞\n"
            "/–ø–æ–ø–æ–ª–Ω–∏—Ç—å <—Å—É–º–º–∞*> ‚Äî –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫\n"
            "/–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ <@—É—á–∞—Å—Ç–Ω–∏–∫*> <—Å—É–º–º–∞*> ‚Äî –ø–µ—Ä–µ–≤–æ–¥ –¥—Ä—É–≥–æ–º—É\n"
            "/—Ç–æ–ø ‚Äî —Ç–æ–ø –±–æ–≥–∞—Ç—ã—Ö\n"
            "\n**–ë–æ–Ω—É—Å—ã**\n"
            "/–±–æ–Ω—É—Å ‚Äî –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å (—Ä–∞–∑ –≤ 24—á)\n"
            "\n**–ú–∞–≥–∞–∑–∏–Ω –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å**\n"
            "/–º–∞–≥–∞–∑–∏–Ω ‚Äî –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–º–µ—Ç–æ–≤\n"
            "/–º–∞–≥–∞–∑–∏–Ω –∏–Ω—Ñ–æ <–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞*> ‚Äî –∏–Ω—Ñ–æ –æ –ø—Ä–µ–¥–º–µ—Ç–µ\n"
            "/–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å [@—É—á–∞—Å—Ç–Ω–∏–∫] ‚Äî –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n"
            "/–∫—É–ø–∏—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ id –ø—Ä–µ–¥–º–µ—Ç–∞*> ‚Äî –∫—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç\n"
            "/–ø—Ä–æ–¥–∞—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞*> ‚Äî –ø—Ä–æ–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç\n"
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

class FunButton(Button):
    def __init__(self):
        super().__init__(
            label="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
            style=discord.ButtonStyle.secondary,
            emoji="üé≤",
            custom_id="fun_button"
        )

    async def callback(self, interaction: discord.Interaction):
        embed = discord.Embed(title="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", color=discord.Color.purple())
        embed.description = (
            "\n**–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è**\n"
            "/–º–æ–Ω–µ—Ç–∫–∞ <–æ—Ä–µ–ª/—Ä–µ—à–∫–∞> <—Å—É–º–º–∞> ‚Äî –ø–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É\n"
            "/—Å–ª–æ—Ç—ã <—Å—É–º–º–∞> ‚Äî –∏–≥—Ä–æ–≤—ã–µ —Å–ª–æ—Ç—ã\n"
            "/–∫–æ—Å—Ç–∏ <—Å—É–º–º–∞> [—Å—Ç–∞–≤–∫–∞_–Ω–∞] ‚Äî –∫–æ—Å—Ç–∏ (1-6, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 6)"
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

class ShopView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(ShopButton())
        self.add_item(CommandsButton())
        self.add_item(FunButton())


class MainBank(commands.Cog):
    def __init__(self, client: EconomyBot):
        self.client = client
        self.bank = self.client.db.bank
        self.tree = client.tree

    def create_balance_image(self, title, wallet_amt, bank_amt, net_amt, username):
        img = Image.new('RGBA', (400, 180), (30, 30, 30, 255))
        draw = ImageDraw.Draw(img)
        font = ImageFont.truetype('arial.ttf', 24)
        small_font = ImageFont.truetype('arial.ttf', 18)
        # Title
        draw.text((20, 10), title, font=font, fill=(255, 215, 0))
        # Wallet
        draw.text((20, 60), f"–ö–æ—à–µ–ª—ë–∫: {wallet_amt}", font=small_font, fill=(255, 255, 255))
        # Bank
        draw.text((20, 90), f"–ë–∞–Ω–∫: {bank_amt}", font=small_font, fill=(255, 255, 255))
        # Total
        draw.text((20, 120), f"–í—Å–µ–≥–æ: {net_amt}", font=small_font, fill=(255, 255, 255))
        # Username
        draw.text((20, 150), f"{username}", font=small_font, fill=(180, 180, 180))
        # Gold icon (optional)
        try:
            gold = Image.open('assets/gold.png').resize((32, 32))
            img.paste(gold, (340, 60), gold)
            img.paste(gold, (340, 90), gold)
            img.paste(gold, (340, 120), gold)
        except Exception:
            pass
        buf = io.BytesIO()
        img.save(buf, format='PNG')
        buf.seek(0)
        return buf

    def create_transfer_receipt(self, sender, recipient, amount, balance, banker_name=None):
        from datetime import datetime, timedelta
        img = Image.new('RGBA', (400, 210), (30, 30, 30, 255))
        draw = ImageDraw.Draw(img)
        try:
            font = ImageFont.truetype('arial.ttf', 22)
            small_font = ImageFont.truetype('arial.ttf', 16)
        except Exception:
            font = ImageFont.load_default()
            small_font = ImageFont.load_default()
        draw.rectangle([0, 0, 399, 209], outline=(80, 80, 80), width=2)
        draw.text((20, 10), "–ß–ï–ö –ü–ï–†–ï–í–û–î–ê", font=font, fill=(255, 215, 0))
        draw.text((20, 40), f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender}", font=small_font, fill=(200, 200, 200))
        draw.text((20, 65), f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient}", font=small_font, fill=(200, 200, 200))
        draw.text((20, 90), f"–°—É–º–º–∞: {amount}", font=small_font, fill=(255, 255, 255))
        draw.text((20, 115), f"–û—Å—Ç–∞—Ç–æ–∫: {balance}", font=small_font, fill=(255, 255, 255))
        # –í—Ä–µ–º—è
        try:
            import pytz
            tz = pytz.timezone('Europe/Moscow')
            now = datetime.now(tz)
        except Exception:
            now = datetime.utcnow() + timedelta(hours=3)
        time_str = now.strftime('%d.%m.%Y %H:%M:%S')
        draw.text((20, 140), f"–í—Ä–µ–º—è (–ú–°–ö): {time_str}", font=small_font, fill=(180, 180, 180))
        if banker_name:
            draw.text((20, 165), f"–ë–∞–Ω–∫–∏—Ä: {banker_name}", font=small_font, fill=(120, 180, 255))
        try:
            gold = Image.open('assets/gold.png').resize((20, 20))
            img.paste(gold, (120, 88), gold)
        except Exception:
            pass
        buf = io.BytesIO()
        img.save(buf, format='PNG')
        buf.seek(0)
        return buf

    @app_commands.command(name="–±–∞–ª–∞–Ω—Å", description="–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
    async def balance_slash(self, interaction: discord.Interaction, member: discord.Member = None):
        user = member or interaction.user
        user_av = user.display_avatar or user.default_avatar
        if user.bot:
            await interaction.response.send_message("–£ –±–æ—Ç–æ–≤ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞", ephemeral=True)
            return
        await self.bank.open_acc(user)
        users = await self.bank.get_acc(user)
        wallet_amt = users[1]
        bank_amt = users[2]
        net_amt = int(wallet_amt + bank_amt)
        buf = self.create_balance_image(f"–ë–∞–ª–∞–Ω—Å {user.name}", wallet_amt, bank_amt, net_amt, user.name)
        file = discord.File(buf, filename="balance.png")
        await interaction.response.send_message(file=file)

    @app_commands.command(name="—Å–Ω—è—Ç—å", description="–°–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–Ω–∫–∞")
    @app_commands.describe(amount="–°—É–º–º–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è (—á–∏—Å–ª–æ –∏–ª–∏ '–≤—Å–µ')")
    async def withdraw_slash(self, interaction: discord.Interaction, amount: str):
        print(f"[LOG] withdraw_slash called by user={interaction.user} id={interaction.user.id} amount={amount}")
        user = interaction.user
        await self.bank.open_acc(user)
        print(f"[LOG] open_acc completed in withdraw_slash for user={user} id={user.id}")
        users = await self.bank.get_acc(user)
        print(f"[LOG] get_acc result in withdraw_slash: {users}")
        bank_amt = users[2]
        if amount.lower() in ["–≤—Å–µ", "–º–∞–∫—Å", "all", "max"]:
            print(f"[LOG] withdraw_slash: withdrawing all {bank_amt}")
            await self.bank.update_acc(user, +1 * bank_amt)
            await self.bank.update_acc(user, -1 * bank_amt, "bank")
            await interaction.response.send_message(f"–í—ã —Å–Ω—è–ª–∏ {bank_amt} <:gold:1396897616729735299> –∏–∑ –±–∞–Ω–∫–∞.")
            return
        try:
            amount_int = int(amount)
        except ValueError:
            await interaction.response.send_message("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É!", ephemeral=True)
            return
        if amount_int > bank_amt:
            await interaction.response.send_message(f"–£ –≤–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–π —Å—É–º–º—ã –≤ –±–∞–Ω–∫–µ!", ephemeral=True)
            return
        if amount_int < 0:
            await interaction.response.send_message(f"–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É!", ephemeral=True)
            return
        print(f"[LOG] withdraw_slash: withdrawing {amount_int}")
        await self.bank.update_acc(user, +amount_int)
        await self.bank.update_acc(user, -amount_int, "bank")
        await interaction.response.send_message(f"–í—ã —Å–Ω—è–ª–∏ {amount_int} <:gold:1396897616729735299> –∏–∑ –±–∞–Ω–∫–∞.")

    @app_commands.command(name="–ø–æ–ø–æ–ª–Ω–∏—Ç—å", description="–ü–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –±–∞–Ω–∫")
    @app_commands.describe(amount="–°—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (—á–∏—Å–ª–æ –∏–ª–∏ '–≤—Å–µ')")
    async def deposit_slash(self, interaction: discord.Interaction, amount: str):
        print(f"[LOG] deposit_slash called by user={interaction.user} id={interaction.user.id} amount={amount}")
        user = interaction.user
        await self.bank.open_acc(user)
        print(f"[LOG] open_acc completed in deposit_slash for user={user} id={user.id}")
        users = await self.bank.get_acc(user)
        print(f"[LOG] get_acc result in deposit_slash: {users}")
        wallet_amt = users[1]
        if amount.lower() in ["–≤—Å–µ", "–º–∞–∫—Å", "all", "max"]:
            print(f"[LOG] deposit_slash: depositing all {wallet_amt}")
            await self.bank.update_acc(user, -wallet_amt)
            await self.bank.update_acc(user, +wallet_amt, "bank")
            await interaction.response.send_message(f"–í—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–Ω–∫ –Ω–∞ {wallet_amt} <:gold:1396897616729735299>.")
            return
        try:
            amount_int = int(amount)
        except ValueError:
            await interaction.response.send_message("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É!", ephemeral=True)
            return
        if amount_int > wallet_amt:
            await interaction.response.send_message(f"–£ –≤–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–π —Å—É–º–º—ã –≤ –∫–æ—à–µ–ª—å–∫–µ!", ephemeral=True)
            return
        if amount_int < 0:
            await interaction.response.send_message(f"–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É!", ephemeral=True)
            return
        print(f"[LOG] deposit_slash: depositing {amount_int}")
        await self.bank.update_acc(user, -amount_int)
        await self.bank.update_acc(user, +amount_int, "bank")
        await interaction.response.send_message(f"–í—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–Ω–∫ –Ω–∞ {amount_int} <:gold:1396897616729735299>.")

    @app_commands.command(name="–ø–µ—Ä–µ–≤–µ—Å—Ç–∏", description="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –¥—Ä—É–≥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É")
    @app_commands.describe(member="–ö–æ–º—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏", amount="–°—É–º–º–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞")
    async def transfer_slash(self, interaction: discord.Interaction, member: discord.Member, amount: int):
        print(f"[LOG] transfer_slash called by user={interaction.user} id={interaction.user.id} to member={member} id={member.id} amount={amount}")
        user = interaction.user
        if member.bot:
            await interaction.response.send_message("–£ –±–æ—Ç–æ–≤ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞", ephemeral=True)
            return
        await self.bank.open_acc(user)
        print(f"[LOG] open_acc completed in transfer_slash for user={user} id={user.id}")
        await self.bank.open_acc(member)
        print(f"[LOG] open_acc completed in transfer_slash for member={member} id={member.id}")
        users = await self.bank.get_acc(user)
        print(f"[LOG] get_acc result in transfer_slash: {users}")
        wallet_amt = users[1]
        if amount <= 0:
            await interaction.response.send_message("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É!", ephemeral=True)
            return
        if amount > wallet_amt:
            await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ <:gold:1396897616729735299>", ephemeral=True)
            return
        print(f"[LOG] transfer_slash: transferring {amount} from user={user.id} to member={member.id}")
        await self.bank.update_acc(user, -amount)
        await self.bank.update_acc(member, +amount)
        users = await self.bank.get_acc(user)
        buf = self.create_transfer_receipt(user.display_name, member.display_name, amount, users[1], banker_name=user.display_name)
        file = discord.File(buf, filename="transfer.png")
        await interaction.response.send_message(file=file)

    @app_commands.command(name="—Ç–æ–ø", description="–¢–æ–ø –±–æ–≥–∞—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    async def top_slash(self, interaction: discord.Interaction):
        users = await self.bank.get_networth_lb()
        total_money = await self.client.db.execute("SELECT SUM(wallet + bank) FROM bank", fetch="one")
        total_money = total_money[0] if total_money and total_money[0] is not None else 0
        data = []
        index = 1
        for member in users:
            if index > 10:
                break
            user_obj = self.client.get_user(member[0])
            member_amt = member[1]
            mention = user_obj.mention if user_obj else f"<@{member[0]}>"
            if index == 1:
                msg1 = f"**ü•á {mention} -- {member_amt} <:gold:1396897616729735299>**"
                data.append(msg1)
            elif index == 2:
                msg2 = f"**ü•à {mention} -- {member_amt} <:gold:1396897616729735299>**"
                data.append(msg2)
            elif index == 3:
                msg3 = f"**ü•â {mention} -- {member_amt} <:gold:1396897616729735299>**\n"
                data.append(msg3)
            else:
                members = f"**{index} {mention} -- {member_amt} <:gold:1396897616729735299>**"
                data.append(members)
            index += 1
        msg = "\n".join(data)
        em = discord.Embed(
            title=f"–¢–æ–ø {index - 1} —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ <:gold:1396897616729735299>)",
            description=f"**–í—Å–µ–≥–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:** {total_money:,} <:gold:1396897616729735299>\n\n–†–µ–π—Ç–∏–Ω–≥ –ø–æ –æ–±—â–µ–π —Å—É–º–º–µ (–∫–æ—à–µ–ª—ë–∫ + –±–∞–Ω–∫) –≤ <:gold:1396897616729735299> –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n{msg}",
            color=discord.Color(0x00ff00),
            timestamp=datetime.utcnow()
        )
        em.set_footer(text=f"–ì–õ–û–ë–ê–õ–¨–ù–û - {interaction.guild.name}")
        view = ShopView()
        await interaction.response.send_message(embed=em, view=view)

    @app_commands.command(name="–ø–æ–º–æ—â—å", description="–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º")
    async def help_slash(self, interaction: discord.Interaction):
        em = discord.Embed(title="–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º", color=discord.Color.gold())
        em.description = "**–≠–∫–æ–Ω–æ–º–∏–∫–∞, –±–∞–Ω–∫, –º–∞–≥–∞–∑–∏–Ω, –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è, –∞–¥–º–∏–Ω**\n\n–ê—Ä–≥—É–º–µ–Ω—Ç—ã —Å * –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã."
        em.add_field(
            name="–≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ –±–∞–Ω–∫",
            value=(
                "`/–±–∞–ª–∞–Ω—Å [@—É—á–∞—Å—Ç–Ω–∏–∫]` ‚Äî –±–∞–ª–∞–Ω—Å (–∫–æ—à–µ–ª—ë–∫/–±–∞–Ω–∫)\n"
                "`/—Å–Ω—è—Ç—å <—Å—É–º–º–∞*>` ‚Äî —Å–Ω—è—Ç—å —Å –±–∞–Ω–∫–∞\n"
                "`/–ø–æ–ø–æ–ª–Ω–∏—Ç—å <—Å—É–º–º–∞*>` ‚Äî –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫\n"
                "`/–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ <@—É—á–∞—Å—Ç–Ω–∏–∫*> <—Å—É–º–º–∞*>` ‚Äî –ø–µ—Ä–µ–≤–æ–¥ –¥—Ä—É–≥–æ–º—É\n"
                "`/—Ç–æ–ø` ‚Äî —Ç–æ–ø –±–æ–≥–∞—Ç—ã—Ö\n"
            ),
            inline=False
        )
        em.add_field(
            name="–ë–æ–Ω—É—Å—ã",
            value=(
                "`/–±–æ–Ω—É—Å` ‚Äî –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å (—Ä–∞–∑ –≤ 24—á)\n"
            ),
            inline=False
        )
        em.add_field(
            name="–ú–∞–≥–∞–∑–∏–Ω –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å",
            value=(
                "`/–º–∞–≥–∞–∑–∏–Ω` ‚Äî –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–º–µ—Ç–æ–≤\n"
                "`/–º–∞–≥–∞–∑–∏–Ω –∏–Ω—Ñ–æ <–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø—Ä–µ–¥–º–µ—Ç–∞*>` ‚Äî –∏–Ω—Ñ–æ –æ –ø—Ä–µ–¥–º–µ—Ç–µ\n"
                "`/–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å [@—É—á–∞—Å—Ç–Ω–∏–∫]` ‚Äî –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n"
                "`/–∫—É–ø–∏—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ_–∏–ª–∏_id_–ø—Ä–µ–¥–º–µ—Ç–∞*>` ‚Äî –∫—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç\n"
                "`/–ø—Ä–æ–¥–∞—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø—Ä–µ–¥–º–µ—Ç–∞*>` ‚Äî –ø—Ä–æ–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç\n"
            ),
            inline=False
        )
        em.add_field(
            name="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
            value=(
                "`/–º–æ–Ω–µ—Ç–∫–∞ <–æ—Ä–µ–ª/—Ä–µ—à–∫–∞*> <—Å—É–º–º–∞*>` ‚Äî –ø–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É\n"
                "`/—Å–ª–æ—Ç—ã <—Å—É–º–º–∞*>` ‚Äî –∏–≥—Ä–æ–≤—ã–µ —Å–ª–æ—Ç—ã\n"
                "`/–∫–æ—Å—Ç–∏ <—Å—É–º–º–∞*> [—Å—Ç–∞–≤–∫–∞_–Ω–∞]` ‚Äî –∫–æ—Å—Ç–∏ (1-6, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 6)\n"
            ),
            inline=False
        )
        em.add_field(
            name="–ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã",
            value=(
                "`/–¥–æ–±–∞–≤–∏—Ç—å <@—É—á–∞—Å—Ç–Ω–∏–∫*> <—Å—É–º–º–∞*> <–∫—É–¥–∞*>` ‚Äî –≤—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ (–∫–æ—à–µ–ª—ë–∫/–±–∞–Ω–∫)\n"
                "`/—É–±—Ä–∞—Ç—å <@—É—á–∞—Å—Ç–Ω–∏–∫*> <—Å—É–º–º–∞*> <–æ—Ç–∫—É–¥–∞*>` ‚Äî –∑–∞–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ (–∫–æ—à–µ–ª—ë–∫/–±–∞–Ω–∫)\n"
                "`/—Å–±—Ä–æ—Å–∏—Ç—å <@—É—á–∞—Å—Ç–Ω–∏–∫*>` ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç\n"
                "`/–±–∞–Ω <@—É—á–∞—Å—Ç–Ω–∏–∫*> <–≤—Ä–µ–º—è*> [–ø—Ä–∏—á–∏–Ω–∞]` ‚Äî –±–∞–Ω\n"
                "`/–±–∞–Ω–ª–∏—Å—Ç` ‚Äî —Å–ø–∏—Å–æ–∫ –±–∞–Ω–æ–≤\n"
                "`/–∞–Ω–±–∞–Ω <@—É—á–∞—Å—Ç–Ω–∏–∫*>` ‚Äî —Å–Ω—è—Ç—å –±–∞–Ω\n"
            ),
            inline=False
        )
        em.set_footer(text="–ê–ª–∏–∞—Å—ã –∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /<–∫–æ–º–∞–Ω–¥–∞> –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º.")
        await interaction.response.send_message(embed=em)


# if you are using 'discord.py >=v2.0' comment(remove) below code
# def setup(client):
#     client.add_cog(MainBank(client))

# if you are using 'discord.py >=v2.0' uncomment(add) below code
async def setup(client):
    await client.add_cog(MainBank(client))
