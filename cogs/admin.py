
from base import EconomyBot

import discord

from discord.ext import commands
from discord.utils import get

import json
import os
from datetime import datetime, timedelta
from PIL import Image, ImageDraw, ImageFont
import io

BAN_FILE = 'bans.json'

def load_bans():
    if not os.path.exists(BAN_FILE):
        return {}
    with open(BAN_FILE, 'r', encoding='utf-8') as f:
        return json.load(f)

def save_bans(bans):
    with open(BAN_FILE, 'w', encoding='utf-8') as f:
        json.dump(bans, f, ensure_ascii=False, indent=2)


def is_banker_or_owner():
    async def predicate(ctx):
        if await ctx.bot.is_owner(ctx.author):
            return True
        role = get(ctx.author.roles, name="General Manager") or get(ctx.author.roles, name="Operations Manager") or get(ctx.author.roles, name="Media Head Admin") or get(ctx.author.roles, name="Discord Manager")
        return role is not None
    return commands.check(predicate)

class Admin(commands.Cog):
    def __init__(self, client: EconomyBot):
        self.client = client
        self.bank = self.client.db.bank

    def create_admin_receipt(self, action, member, amount, banker, balance=None):
        img = Image.new('RGBA', (400, 190), (30, 30, 30, 255))
        draw = ImageDraw.Draw(img)
        try:
            font = ImageFont.truetype('arial.ttf', 24)
            small_font = ImageFont.truetype('arial.ttf', 16)
        except Exception:
            font = ImageFont.load_default()
            small_font = ImageFont.load_default()
        draw.rectangle([0, 0, 399, 189], outline=(80, 80, 80), width=2)
        draw.text((20, 10), "–ß–ï–ö", font=font, fill=(255, 215, 0))
        draw.text((20, 45), f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.display_name}", font=small_font, fill=(200, 200, 200))
        draw.text((20, 70), f"{action}: {amount:,}", font=small_font, fill=(255, 255, 255))
        if balance is not None:
            draw.text((20, 90), f"–û—Å—Ç–∞—Ç–æ–∫: {balance}", font=small_font, fill=(255, 255, 255))
        # –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
        try:
            import pytz
            tz = pytz.timezone('Europe/Moscow')
            now = datetime.now(tz)
        except Exception:
            now = datetime.utcnow() + timedelta(hours=3)
        time_str = now.strftime('%d.%m.%Y %H:%M:%S')
        draw.text((20, 150), f"–í—Ä–µ–º—è (–ú–°–ö): {time_str}", font=small_font, fill=(180, 180, 180))
        draw.text((20, 170), f"–ë–∞–Ω–∫–∏—Ä: {banker.display_name}", font=small_font, fill=(120, 180, 255))
        buf = io.BytesIO()
        img.save(buf, format='PNG')
        buf.seek(0)
        return buf

    @commands.command(aliases=["addmoney"], usage="<—É—á–∞—Å—Ç–Ω–∏–∫*: @—É—á–∞—Å—Ç–Ω–∏–∫> <—Å—É–º–º–∞*: —á–∏—Å–ª–æ> <–∫—É–¥–∞: –∫–æ—à–µ–ª—ë–∫ –∏–ª–∏ –±–∞–Ω–∫>")
    @is_banker_or_owner()
    @commands.cooldown(3, 2 * 60, commands.BucketType.user)
    async def –¥–æ–±–∞–≤–∏—Ç—å(self, ctx, member: discord.Member, amount: str, mode: str = "–∫–æ—à–µ–ª—ë–∫"):
        mode = mode.lower()
        if member.bot:
            return await ctx.reply("–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –±–æ—Ç—É", mention_author=False)
        if not amount.isdigit() or int(amount) <= 0:
            return await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É")
        if mode not in ["–∫–æ—à–µ–ª—ë–∫", "–±–∞–Ω–∫"]:
            return await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ª–∏–±–æ –∫–æ—à–µ–ª—ë–∫, –ª–∏–±–æ –±–∞–Ω–∫")

        limit = 1_000_000_000
        amount = int(amount)
        if amount > limit:
            return await ctx.reply(f"–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ {limit:,}")

        await self.bank.open_acc(member)
        await self.bank.update_acc(member, +amount, "wallet" if mode == "–∫–æ—à–µ–ª—ë–∫" else "bank")
        users = await self.bank.get_acc(member)
        balance = users[1] if mode == "–∫–æ—à–µ–ª—ë–∫" else users[2]
        buf = self.create_admin_receipt("–î–æ–±–∞–≤–ª–µ–Ω–æ", member, amount, ctx.author, balance=balance)
        file = discord.File(buf, filename="admin_receipt.png")
        await ctx.reply(f"–í—ã –¥–æ–±–∞–≤–∏–ª–∏ {amount:,} <:gold:1396897616729735299> –≤ {mode} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention}", file=file, mention_author=False)
        
        # –õ–æ–≥ –∞–¥–º–∏–Ω—Å–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ —Ñ–æ—Ä—É–º-–∫–∞–Ω–∞–ª
        forum_channel_id = 1396619305763733686
        forum_channel = ctx.guild.get_channel(forum_channel_id)
        if forum_channel and hasattr(forum_channel, 'create_thread'):
            thread_title = f"–ê–¥–º–∏–Ω: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–Ω–µ–≥ ({member.name})"
            log_content = f"""
**–ê–î–ú–ò–ù–°–ö–ê–Ø –û–ü–ï–†–ê–¶–ò–Ø: –î–û–ë–ê–í–õ–ï–ù–ò–ï –î–ï–ù–ï–ì**
üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.mention}
üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {member.mention}
üí∞ –°—É–º–º–∞: {amount:,} <:gold:1396897616729735299>
üè¶ –ö—É–¥–∞: {mode}
üí≥ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: {balance:,} <:gold:1396897616729735299>
‚è∞ –í—Ä–µ–º—è: <t:{int(datetime.utcnow().timestamp())}:f>
            """
            try:
                thread = await forum_channel.create_thread(name=thread_title, content=log_content)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–∞ –∞–¥–º–∏–Ω—Å–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏: {e}")

    @commands.command(aliases=["remoney"], usage="<—É—á–∞—Å—Ç–Ω–∏–∫*: @—É—á–∞—Å—Ç–Ω–∏–∫> <—Å—É–º–º–∞*: —á–∏—Å–ª–æ> <–æ—Ç–∫—É–¥–∞: –∫–æ—à–µ–ª—ë–∫ –∏–ª–∏ –±–∞–Ω–∫>")
    @is_banker_or_owner()
    @commands.cooldown(3, 2 * 60, commands.BucketType.user)
    async def —É–±—Ä–∞—Ç—å(self, ctx, member: discord.Member, amount: str, mode: str = "–∫–æ—à–µ–ª—ë–∫"):
        mode = mode.lower()
        if member.bot:
            return await ctx.reply("–ù–µ–ª—å–∑—è —É–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ —É –±–æ—Ç–∞", mention_author=False)
        if not amount.isdigit() or int(amount) <= 0:
            return await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É")
        if mode not in ["–∫–æ—à–µ–ª—ë–∫", "–±–∞–Ω–∫"]:
            return await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ª–∏–±–æ –∫–æ—à–µ–ª—ë–∫, –ª–∏–±–æ –±–∞–Ω–∫")

        amount = int(amount)
        await self.bank.open_acc(member)

        users = await self.bank.get_acc(member)
        user_amt = users[2 if mode == "–±–∞–Ω–∫" else 1]
        if user_amt < amount:
            return await ctx.reply(
                f"–ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ {user_amt:,} <:gold:1396897616729735299> –∏–∑ {mode} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention}"
            )

        await self.bank.update_acc(member, -amount, "wallet" if mode == "–∫–æ—à–µ–ª—ë–∫" else "bank")
        users = await self.bank.get_acc(member)
        balance = users[1] if mode == "–∫–æ—à–µ–ª—ë–∫" else users[2]
        buf = self.create_admin_receipt("–°–Ω—è—Ç–æ", member, amount, ctx.author, balance=balance)
        file = discord.File(buf, filename="admin_receipt.png")
        await ctx.reply(f"–í—ã —É–±—Ä–∞–ª–∏ {amount:,} <:gold:1396897616729735299> –∏–∑ {mode} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention}", file=file, mention_author=False)
        
        # –õ–æ–≥ –∞–¥–º–∏–Ω—Å–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ —Ñ–æ—Ä—É–º-–∫–∞–Ω–∞–ª
        forum_channel_id = 1396619305763733686
        forum_channel = ctx.guild.get_channel(forum_channel_id)
        if forum_channel and hasattr(forum_channel, 'create_thread'):
            thread_title = f"–ê–¥–º–∏–Ω: –°–Ω—è—Ç–∏–µ –¥–µ–Ω–µ–≥ ({member.name})"
            log_content = f"""
**–ê–î–ú–ò–ù–°–ö–ê–Ø –û–ü–ï–†–ê–¶–ò–Ø: –°–ù–Ø–¢–ò–ï –î–ï–ù–ï–ì**
üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ctx.author.mention}
üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.mention}
üí∞ –°—É–º–º–∞: {amount:,} <:gold:1396897616729735299>
üè¶ –û—Ç–∫—É–¥–∞: {mode}
üí≥ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: {balance:,} <:gold:1396897616729735299>
‚è∞ –í—Ä–µ–º—è: <t:{int(datetime.utcnow().timestamp())}:f>
            """
            try:
                thread = await forum_channel.create_thread(name=thread_title, content=log_content)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–∞ –∞–¥–º–∏–Ω—Å–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏: {e}")

    @commands.command(aliases=["reset_user"], usage="<—É—á–∞—Å—Ç–Ω–∏–∫*: @—É—á–∞—Å—Ç–Ω–∏–∫>")
    @is_banker_or_owner()
    @commands.cooldown(2, 3 * 60, commands.BucketType.user)
    async def —Å–±—Ä–æ—Å–∏—Ç—å(self, ctx, member: discord.Member):
        if member.bot:
            return await ctx.reply("–£ –±–æ—Ç–æ–≤ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞", mention_author=False)

        await self.bank.open_acc(member)
        conn = await self.bank._db.connect()
        await self.bank._db.run(
            f"UPDATE bank SET wallet = 0, bank = 0 WHERE userID = ?",
            (member.id,), conn=conn
        )
        await conn.close()
        buf = self.create_admin_receipt("–°–±—Ä–æ—à–µ–Ω–æ", member, 0, ctx.author)
        file = discord.File(buf, filename="admin_receipt.png")
        await ctx.reply(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} –±—ã–ª –æ–±–Ω—É–ª—ë–Ω", file=file, mention_author=False)

    @commands.command(aliases=["ban"], usage="<—É—á–∞—Å—Ç–Ω–∏–∫: @—É—á–∞—Å—Ç–Ω–∏–∫> <–≤—Ä–µ–º—è: 1h/30m/2d> <–ø—Ä–∏—á–∏–Ω–∞: —Ç–µ–∫—Å—Ç>")
    @is_banker_or_owner()
    async def –±–∞–Ω(self, ctx, member: discord.Member, duration: str, *, reason: str = "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"):
        if member.bot:
            return await ctx.reply("–ù–µ–ª—å–∑—è –∑–∞–±–∞–Ω–∏—Ç—å –±–æ—Ç–∞", mention_author=False)
        bans = load_bans()
        uid = str(member.id)
        if uid in bans:
            return await ctx.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω", mention_author=False)
        # –ü–∞—Ä—Å–∏–Ω–≥ –≤—Ä–µ–º–µ–Ω–∏
        try:
            if duration.endswith('h'):
                delta = timedelta(hours=int(duration[:-1]))
            elif duration.endswith('m'):
                delta = timedelta(minutes=int(duration[:-1]))
            elif duration.endswith('d'):
                delta = timedelta(days=int(duration[:-1]))
            else:
                return await ctx.reply("–§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏: 1h, 30m, 2d", mention_author=False)
        except Exception:
            return await ctx.reply("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è. –ü—Ä–∏–º–µ—Ä: 1h, 30m, 2d", mention_author=False)
        until = (datetime.utcnow() + delta).timestamp()
        bans[uid] = {"until": until, "reason": reason, "by": ctx.author.id}
        save_bans(bans)
        await ctx.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –∑–∞–±–∞–Ω–µ–Ω –¥–æ <t:{int(until)}:f> –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}", mention_author=False)

    @commands.command(aliases=["banlist"], usage="")
    @is_banker_or_owner()
    async def –±–∞–Ω–ª–∏—Å—Ç(self, ctx):
        bans = load_bans()
        if not bans:
            return await ctx.reply("–°–ø–∏—Å–æ–∫ –±–∞–Ω–æ–≤ –ø—É—Å—Ç", mention_author=False)
        lines = []
        now = datetime.utcnow().timestamp()
        for uid, info in bans.items():
            left = int(info["until"] - now)
            if left < 0:
                left = 0
            m = ctx.guild.get_member(int(uid))
            name = m.mention if m else uid
            lines.append(f"{name} ‚Äî –µ—â—ë {timedelta(seconds=left)} | {info['reason']}")
        await ctx.reply("\n".join(lines), mention_author=False)

    @commands.command(aliases=["unban"], usage="<—É—á–∞—Å—Ç–Ω–∏–∫: @—É—á–∞—Å—Ç–Ω–∏–∫>")
    @is_banker_or_owner()
    async def –∞–Ω–±–∞–Ω(self, ctx, member: discord.Member):
        bans = load_bans()
        uid = str(member.id)
        if uid not in bans:
            return await ctx.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –±–∞–Ω–µ", mention_author=False)
        bans.pop(uid)
        save_bans(bans)
        await ctx.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} —Ä–∞–∑–±–∞–Ω–µ–Ω", mention_author=False)


# if you are using 'discord.py >=v2.0' comment(remove) below code
# def setup(client):
#     client.add_cog(Admin(client))

# if you are using 'discord.py >=v2.0' uncomment(add) below code
async def setup(client):
    await client.add_cog(Admin(client))
